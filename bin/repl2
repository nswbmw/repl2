#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const repl = require('repl')

const home = require('home')()
const globalModulesPath = require('global-modules')

const cwd = process.cwd()
const modules = {}
const noderc = tryLoadConfig()

for (let moduleName in noderc) {
  const name = noderc[moduleName]
  const moduleInfo = tryRequireModule(moduleName)
  if (moduleInfo) {
    modules[name] = moduleInfo.module
    console.log('%s = %s@%s -> %s', name, moduleName, moduleInfo.version, moduleInfo.source)
  }
}

Object.assign(repl.start('> ').context, modules)

function tryLoadConfig () {
  try {
    return JSON.parse(fs.readFileSync(path.join(home, '.noderc'), 'utf-8'))
  } catch (e) {}
}

function tryRequireModule (moduleName) {
  let modulePath, _module, version, source

  try {
    modulePath = path.join(globalModulesPath, moduleName)
    _module = require(modulePath)
    version = require(path.join(modulePath, 'package.json')).version
    source = 'global'
  } catch (e) {}

  try {
    modulePath = path.join(cwd, 'node_modules', moduleName)
    _module = require(modulePath)
    version = require(path.join(modulePath, 'package.json')).version
    source = 'local'
  } catch (e) {}

  if (_module && version) {
    return {
      module: _module,
      version,
      source
    }
  }
}
